<?xml version="1.0" encoding="EUC-KR" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//en"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
    <insert id="insert" parameterType="Product" useGeneratedKeys="true" keyColumn="prod_no" keyProperty="prodNo">
        INSERT INTO product
        (
        prod_no,
        register,
        prod_name,
        prod_detail,
        manufacture_day,
        price,
        reg_date,
        stock,
        category_no )
        VALUES
        (
        <if test="prodNo != 0">
            #{prodNo}
        </if>
        <if test="prodNo == 0">
            nextval('seq_product_prod_no')
        </if>,
        #{register: VARCHAR},
        #{prodName: VARCHAR},
        #{prodDetail: VARCHAR},
        #{manuDate: DATE},
        #{price: NUMERIC},
        <if test="regDate != null">
            #{regDate: DATE}
        </if>
        <if test="regDate == null">
            CURRENT_DATE
        </if>,
        #{stock: NUMERIC},
        #{category.categoryNo: NUMERIC} )
    </insert>

    <resultMap id="categoryMap" type="Category" extends="CategoryMapper.categoryMap"/>

    <resultMap id="product" type="Product">
        <id column="prod_no" property="prodNo" jdbcType="NUMERIC"/>
        <result column="register" property="register" jdbcType="VARCHAR"/>
        <result column="prod_name" property="prodName" jdbcType="VARCHAR"/>
        <result column="prod_detail" property="prodDetail" jdbcType="VARCHAR"/>
        <result column="manufacture_day" property="manuDate" jdbcType="DATE"/>
        <result column="price" property="price" jdbcType="NUMERIC"/>
        <result column="reg_date" property="regDate" jdbcType="DATE"/>
        <result column="stock" property="stock" jdbcType="NUMERIC"/>
        <association property="category" javaType="Category" resultMap="CategoryMapper.categoryMap"/>
        <collection property="productImages" resultMap="ProductImageMapper.productImage"/>
    </resultMap>

    <select id="findById" parameterType="int" resultMap="product">
        SELECT
            p.prod_no         AS prod_no,
            p.register        AS register,
            p.prod_name       AS prod_name,
            p.prod_detail     AS prod_detail,
            p.manufacture_day AS manufacture_day,
            p.price           AS price,
            p.reg_date        AS reg_date,
            p.stock           AS stock,
            c.category_no     AS category_no,
            c.category_name   AS category_name,
            pi.image_no       AS image_no,
            pi.file_name      AS file_name,
            pi.description    AS description,
            pi.thumbnail      AS thumbnail
        FROM product AS p
        LEFT OUTER JOIN product_image AS pi ON pi.prod_no = p.prod_no
        LEFT OUTER JOIN category AS c ON c.category_no = p.category_no
        WHERE p.prod_no = #{value}
    </select>

    <select id="findProductsByIds" parameterType="java.util.List" resultMap="product">
        SELECT
            p.prod_no,
            p.register,
            p.prod_name,
            p.prod_detail,
            p.manufacture_day,
            p.price,
            p.reg_date,
            p.stock,
            c.category_no,
            c.category_name,
            pi.image_no,
            pi.file_name,
            pi.description,
            pi.thumbnail
        FROM product AS p
        LEFT OUTER JOIN category AS c ON c.category_no = p.category_no
        LEFT OUTER JOIN product_image AS pi ON pi.prod_no = p.prod_no
        <where>
            <if test="list.size != 0">
                p.prod_no IN
                <foreach item="id" collection="list" open="(" separator=", " close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="findList" parameterType="map" resultMap="product">
        SELECT
            v.prod_no         AS prod_no,
            v.register        AS register,
            v.prod_name       AS prod_name,
            v.prod_detail     AS prod_detail,
            v.manufacture_day AS manufacture_day,
            v.price           AS price,
            v.reg_date        AS reg_date,
            v.stock           AS stock,
            v.category_no     AS category_no,
            v.category_name   AS category_name,
            pi.image_no       AS image_no,
            pi.file_name      AS file_name,
            pi.description    AS description,
            pi.thumbnail      AS thumbnail
        FROM (
            SELECT
                ROW_NUMBER() OVER(
                <if test="orderBy != null">
                    <if test="orderBy.propertyName == 'prodNo'">
                        ORDER BY p.prod_no
                    </if>
                    <if test="orderBy.propertyName == 'prodName'">
                        ORDER BY p.prod_name
                    </if>
                    <if test="orderBy.propertyName == 'price'">
                        ORDER BY p.price
                    </if>
                    <if test="orderBy.propertyName == 'regDate'">
                        ORDER BY p.reg_date
                    </if>
                    <if test="ascend == null or !ascend">
                        DESC
                    </if>
                    <if test="ascend != null and ascend">
                        ASC
                    </if>
                </if>
                <if test="orderBy == null">
                    ORDER BY p.prod_no DESC
                </if>
                )  AS row_num,
                p.prod_no         AS prod_no,
                p.register        AS register,
                p.prod_name       AS prod_name,
                p.prod_detail     AS prod_detail,
                p.manufacture_day AS manufacture_day,
                p.price           AS price,
                p.reg_date        AS reg_date,
                p.stock           AS stock,
                c.category_no     AS category_no,
                c.category_name   AS category_name
            FROM product AS p
            LEFT OUTER JOIN category AS c
                ON c.category_no = p.category_no
            <where>
                <if test="searchCondition == 1">
                    p.prod_name LIKE #{prodName}
                </if>
                <if test="searchCondition == 2">
                    <if test="lowerBound != null and upperBound != null">
                        p.price BETWEEN #{lowerBound} AND #{upperBound}
                    </if>
                    <if test="lowerBound != null and upperBound == null">
                        p.price $gt;= #{lowerBound}
                    </if>
                    <if test="lowerBound == null and upperBound != null">
                        p.price $lt;= #{upperBound}
                    </if>
                </if>
                <if test="categoryNo != null">
                    AND c.category_no = #{categoryNo}
                </if>
                <if test="register != null">
                    AND p.register = #{register}
                </if>
            </where>
        ) v
        LEFT OUTER JOIN product_image pi ON pi.prod_no = v.prod_no
        WHERE v.row_num BETWEEN #{startRowNum} AND #{endRowNum}
        <if test="orderBy != null">
            <if test="orderBy.propertyName == 'prodNo'">
                ORDER BY v.prod_no
            </if>
            <if test="orderBy.propertyName == 'prodName'">
                ORDER BY v.prod_name
            </if>
            <if test="orderBy.propertyName == 'price'">
                ORDER BY v.price
            </if>
            <if test="orderBy.propertyName == 'regDate'">
                ORDER BY v.reg_date
            </if>

            <if test="ascend == null or !ascend">
                DESC
            </if>
            <if test="ascend != null and ascend">
                ASC
            </if>
        </if>
        <if test="orderBy == null">
            ORDER BY v.prod_no DESC
        </if>
    </select>

    <select id="count" parameterType="search" resultType="int">
        SELECT
            COUNT(p.prod_no)
        FROM product AS p
        LEFT OUTER JOIN category AS c
                        ON c.category_no = p.category_no
        <where>
            <if test="searchCondition == 1">
                p.prod_name LIKE #{prodName}
            </if>
            <if test="searchCondition == 2">
                <if test="lowerBound != null and upperBound != null">
                    p.price BETWEEN #{lowerBound} AND #{upperBound}
                </if>
                <if test="lowerBound != null and upperBound == null">
                    p.price $gt;= #{lowerBound}
                </if>
                <if test="lowerBound == null and upperBound != null">
                    p.price $lt;= #{upperBound}
                </if>
            </if>
            <if test="categoryNo != null">
                AND c.category_no = #{categoryNo}
            </if>
            <if test="register != null">
                AND p.register = register
            </if>
        </where>
    </select>

    <update id="update" parameterType="Product">
        UPDATE product
        <set>
            <if test="prodName != null">
                prod_name = #{prodName},
            </if>
            <if test="register != null">
                register = #{register},
            </if>
            <if test="prodDetail != null">
                prod_detail = #{prodDetail},
            </if>
            <if test="manuDate != null">
                manufacture_day = #{manuDate},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="regDate != null">
                reg_date = #{regDate},
            </if>
            <if test="stock != null">
                stock = #{stock},
            </if>
            <if test="category != null">
                <if test="category.categoryNo != null">
                    category_no = #{category.categoryNo}
                </if>
            </if>
        </set>
        <where>
            prod_no = #{prodNo}
        </where>
    </update>

    <delete id="clear">
        DELETE
        FROM product
    </delete>
</mapper>